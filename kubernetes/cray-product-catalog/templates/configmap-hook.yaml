---
apiVersion: batch/v1
kind: Job
metadata:
  name: cray-product-catalog-restore
  namespace: services
  annotations:
    "helm.sh/hook": post-upgrade,post-rollback
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: cray-product-catalog
      restartPolicy: Never
      containers:
      - name: create-catalog-configmap
        image: "{{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag }}"
        command: ["/bin/sh"]
        args:
          - "-c"
          - "kubectl get cm -n services cpc-backup -o yaml |
              yq eval '.metadata.name = \"cray-product-catalog\"' - |
              yq eval 'del(.metadata.resourceVersion, .metadata.uid, .metadata.annotations, .metadata.creationTimestamp, .metadata.selfLink, .metadata.managedFields)' - |
              kubectl apply -f - && kubectl delete cm -n services cpc-backup"

---
apiVersion: batch/v1
kind: Job
metadata:
  name: cray-product-catalog-backup
  namespace: services
  annotations:
    "helm.sh/hook": pre-upgrade,pre-rollback
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: cray-product-catalog
      restartPolicy: Never
      containers:
      - name: create-catalog-configmap
        image: "{{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag }}"
        command: ["/bin/sh"]
        args:
          - "-c"
          - "kubectl get cm -n services cray-product-catalog -o yaml |
              yq eval '.metadata.name = \"cpc-backup\"' - |
              yq eval 'del(.metadata.resourceVersion, .metadata.uid, .metadata.annotations, .metadata.creationTimestamp, .metadata.selfLink, .metadata.managedFields)' - |
              kubectl apply -f -"