# Update the CSM Manifest with artifacts from a given release
name: "Update CSM Manifest"

env:
  CHART_NAME: cray-product-catalog

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'release version to update in CSM manifest, eg v1.2.3'
        required: true
        default: 'v'
      csm-branch:
        description: 'branch in the Cray-HPE/csm repo to update'
        required: true
        default: 'main'
      # create-pr:
      #   type: boolean
      #   description: 'create a pull request in the Cray-HPE/csm repo'
      #   required: true
      #   default: true
      # create-pr-draft:
      #   type: boolean
      #   description: 'make the pull request a draft PR'
      #   required: false
      #   default: true

jobs:

  update-csm-manifest:
    runs-on: ubuntu-latest
    # permissions:
    #   contents: write

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.version }}

      - name: Get release
        id: get-release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - run: |
          echo release upload_url is ${{ steps.get-release.outputs.upload_url }}
          echo release html_url is ${{ steps.get-release.outputs.html_url }}
          echo release tag_name is ${{ steps.get-release.outputs.tag_name }}

      - name: get ref for tag
        id: get-ref-tag
        run: |
          echo ::set-output name=tag-ref::$(echo $(git rev-parse --verify $TAG^{commit}))
        env:
          TAG: ${{ github.event.inputs.version }}

      # Find the build that built this tag, get the artifacts.json, and pull the chart version
      - name: Wait for tag/release build to succeed and upload artifacts.json
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-build
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: publish-deploy-script
          ref: ${{ steps.get-ref-tag.outputs.tag-ref }}

      # - name: Wait a while for the github api to report the workflow/artifact
      #   run: |
      #     # Kinda expected the previous action to do this, but it doesn't always
      #     # end up that way.
      #     sleep 60;

      - name: Download artifacts.json
        if: steps.wait-for-build.outputs.conclusion == 'success'
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build-artifacts.yml
          workflow_conclusion: success
          branch: ${{ github.event.inputs.version }}
          name: artifacts.json

      - name: Read artifacts JSON in
        id: set-json-vars
        run: |
          JSON=$(cat ./artifacts.json)
          echo "::set-output name=artifacts::${JSON//'%'/'%25'}"

      # Need chart version in artifacts.json!
      # Should we getting this from the release, or from the build? Is it possible to get it from the build?

      - name: Render artifacts comment template
        if: steps.wait-for-build.outputs.conclusion == 'success'
        uses: chuhlomin/render-template@v1.4
        id: template
        with:
          template: .github/templates/pr-artifacts.md.tmpl
          vars: |
            deployScript: "${{ steps.set-json-vars.outputs.deploy_script }}"
            srcBranch: ${{ github.event.pull_request.head.ref }}
            commit: ${{ github.event.pull_request.head.sha}}
            image: "${{fromJson(steps.set-json-vars.outputs.artifacts).image}}"
            imageUrl: "${{fromJson(steps.set-json-vars.outputs.artifacts).image_url}}"
            chartName: "${{ env.CHART_NAME }}"
            chart: "${{fromJson(steps.set-json-vars.outputs.artifacts).chart}}"
            chartUrl: "${{fromJson(steps.set-json-vars.outputs.artifacts).chart_url}}"
            pymod: "${{fromJson(steps.set-json-vars.outputs.artifacts).pymod}}"
            pymodUrl: "${{fromJson(steps.set-json-vars.outputs.artifacts).pymod_url}}"

      # - name: Configure CSM SSH Key
      #   uses: webfactory/ssh-agent@v0.5.4
      #   with:
      #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Checkout CSM repo
        uses: actions/checkout@v2
        with:
          repository: Cray-HPE/csm
          path: './csm'
          ref: ${{ github.event.inputs.csm-branch }}

      - name: Update manifest helm chart version
        uses: mikefarah/yq@master
        with:
          cmd: yq eval --inplace 'with(.spec.charts[] | select(.name == "strenv(CHART)") ; .version = strenv(VERSION))' ./csm/manifests/sysmgmt.yaml
        env:
          VERSION: "${{ github.event.inputs.version }}"
          CHART: ${{ env.CHART_NAME }}

      - name: Debug Print Manifest File
        run: |
          cat ./csm/manifests/sysmgmt.yaml

      - name: Push a new branch to the CSM manifest repo
        run: |
          cd ./csm
          git checkout -b cray-product-catalog/release-${{ github.event.inputs.version }}
          git diff
          git add -u manifests/sysmgmt.yaml
          git commit --author '${GITHUB_ACTOR} ${GITHUB_ACTOR}@users.noreply.github.com' \
              -m "Update manifest for ${{ env.CHART_NAME }} release version: ${{ github.event.inputs.version }}" \
              -m "This commit was autogenerated by the Update CSM Manifest workflow. See https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          git push --set-upstream origin ${{ env.CHART_NAME }}/release-${{ github.event.inputs.version }}
        env:
          GIT_COMMITTER_NAME: 'github-actions[bot]'
          GIT_COMMITTER_EMAIL: 'noreply@github.com'

      - name: Created branch ${{ env.CHART_NAME }}/release-${{ github.event.inputs.version }}
        run: |
          echo Created ${{ env.CHART_NAME }}/release-${{ github.event.inputs.version }} branch in the Cray-HPE/csm repository.