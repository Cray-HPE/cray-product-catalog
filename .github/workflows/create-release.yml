# Create a new release
name: Create Release

on:
  push:
    tags:
    - 'v*'

jobs:

  # Build and upload artifacts
  build-artifacts:
    # FIXME: For now, have to specify a ref for calling reusable workflows, see https://github.community/t/ref-head-in-reusable-workflows/203690/30
    uses: Cray-HPE/cray-product-catalog/.github/workflows/build-artifacts.yml@feature/increment
    secrets:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # Create a GH release and reference the artifacts and changes
  create-gh-release:
    runs-on: ubuntu-latest
    needs:
      - build-artifacts
    permissions:
      contents: write

    steps:
      - run: |
          echo ${{ needs.build-artifacts.outputs.semVer }}
          echo ${{ needs.build-artifacts.outputs.image-version }}
          echo ${{ needs.build-artifacts.outputs.chart-version }}
          echo ${{ needs.build-artifacts.outputs.py-version }}
          echo ${{ needs.build-artifacts.outputs.is-stable }}
          echo ${{ needs.build-artifacts.outputs.build-date-time }}
          echo ${{ needs.build-artifacts.outputs.image }}
          echo ${{ needs.build-artifacts.outputs.image_url }}
          echo ${{ needs.build-artifacts.outputs.chart }}
          echo ${{ needs.build-artifacts.outputs.chart_url }}
          echo ${{ needs.build-artifacts.outputs.pymod }}
          echo ${{ needs.build-artifacts.outputs.pymod_url }}

      - uses: actions/checkout@v2
      - name: Get semver tool; determine prerelease or not
        id: prerelease
        run: |
          wget -O ./semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          chmod +x ./semver
          export RELEASE_VERSION=${GITHUB_REF#refs/*/v}
          PRERELEASE=$(./semver get prerel ${RELEASE_VERSION})
          if [[ "${PRERELEASE}" = "" ]]; then
            echo ::set-output name=gh_prerelease::$(echo false)
          else
            echo ::set-output name=gh_prerelease::$(echo true)
          fi

      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1.10.0
        with:
          changelog_file: CHANGELOG.md
          release_notes_file: release_notes

      - run: |
          cat release_notes

      - uses: ncipollo/release-action@v1
        if: steps.prerelease.outputs.gh_prerelease == 'false'
        with:
          generateReleaseNotes: true
          prerelease: false
          bodyFile: release_notes
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: ncipollo/release-action@v1
        if: steps.prerelease.outputs.gh_prerelease == 'true'
        with:
          generateReleaseNotes: true
          prerelease: true
          bodyFile: release_notes
          token: ${{ secrets.GITHUB_TOKEN }}