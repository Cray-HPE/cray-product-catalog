# See https://github.com/thomaseizinger/github-action-gitflow-release-workflow
# name: "Publish New Release"

# on:
#   pull_request:
#     branches:
#       - master
#     types:
#       - closed

name: Gitflow Finish Feature

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [ master ]
    types: [ closed ]


# Performs the following actions:
# - Validates that the PR is merged
# - Validates that the head branch matches the gitflow and semver specifications ([release|hotfix]/major.minor.patch etc.). Valid branch names:
#      release/1.0.0
#      hotfix/v1.2.0
#      release/1.5.0+sha1
# - Creates a new tag with the release/hotfix version
# - (Optional) Merges the release/hotfix branch back to develop
# - (Optional) Deletes the release/hotfix branch

jobs:
  gitflow-finish:
    runs-on: ubuntu-latest
    steps:
      - uses: mdwhitten/gitflow-finish-action@v1.2.0
        with:
            pr-num: ${{ github.event.number }}
            token: ${{ secrets.GITHUB_TOKEN }}
            repo-name: ${{ github.repository }}
            # Sets whether to delete the release/hotfix branch after completing all giftlow actions
            del-rel-branch: true
            # Optional - sets whether to merge the release/hotfix branch back into the development branch automatically.
            merge-into-dev: true
            # Optional - the name of the development branch to merge the release/hotfix branch into.
            dev-branch-name: develop
            # Optional - indicates whether to delete the release/hotfix branch after completing all gitflow actions.
            del-source-branch: true
            # Optional - text to prepend to the version when creating a tag.
            tag-prefix: v






# jobs:
#   release:
#     name: Publish new release
#     runs-on: self-hosted
#     if: github.event.pull_request.merged == true # only merged pull requests trigger this job
#     steps:

#       - name: Fetch version
#         id: buildprepversion
#         uses: Cray-HPE/.github/actions/csm-run-build-prep@v2-csm-run-build-prep

#       - name: Create Release
#         uses: thomaseizinger/create-release@1.0.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
#           tag_name: v${{ steps.buildprepversion.outputs.version }}
#           name: v${{ steps.buildprepversion.outputs.version }}
#           draft: false
#           prerelease: false

#       - name: Create Pull Request (master -> develop)
#         uses: peter-evans/create-pull-request@v3
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           committer: GitHub <noreply@github.com>
#           author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
#           signoff: false
#           branch: develop
#           delete-branch: false
#           title: '[autogenerated] Merge master to develop after release ${{ steps.buildprepversion.outputs.version }}'
#           body: |
#             This is an autogenerated PR created when a release is created with a merge to master.
#             This PR merges the master branch back into develop to ensure that the updates that happened on the release branch, i.e. CHANGELOG and manifest updates are also present on the dev branch.
            
#             See #${{ github.event.pull_request.number }}.
#           labels: |
#             github-actions
#             gitflow-maintenance
#           team-reviewers: |
#             owners
#             maintainers
#           draft: false

#       # if needed, you can checkout the latest master here, build artifacts and publish / deploy them somewhere
#       # the create-release action has an output `upload_url` output that you can use to upload assets
